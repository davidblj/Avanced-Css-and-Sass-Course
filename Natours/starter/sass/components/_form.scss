
.form {

  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;

    // the input elements do not inherit the font family, and so we set it
    // manually
    font-family: inherit;
    color: inherit;

    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, .5);
    border: none;

    // make this element static when focused
    border-bottom: 3px solid transparent;
    width: 60%;
    display: block;
    transition: all .3s;

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, .1);
      border-bottom: 3px solid $color-primary;
    }

    // invalid focus input element
    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    // not supported in all browser. We are targetting a browser element, which is the
    // placeholder. Firefox do not need this property
    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: .7rem;
    display: block;
    transition: all .3s;
  }

  // select the sibling label when the input placeholder is shown
  // the sibling must be inmediatly after this elmement (+). We can change this
  // behaviour using a (~) which is general to any sibling
  &__input:placeholder-shown + &__label {

    opacity: 0;
    transform: translateY(-4rem);

    // the visibility property removes an element from the dom itself. We use
    // the opacity for animation purposes
    visibility: hidden;
  }

  &__radio-group {
    width: 40%;
    display: inline-block;
  }

  &__radio-label {

    font-size: $default-font-size;
    cursor: pointer;

    // radio button spacing. This element is actually the parent of the radio
    // button
    position: relative;
    padding-left: 4.5rem;
  }

  &__radio-input {

    // Why does the radio button hit box is as large as the radio button span element after we set the
    // display to none ? becuase html behaves like that when the input display is hidden. The input
    // must be associated with a label ('id' and 'for')
    display: none
  }

  &__radio-button {

    height: 2.3rem;
    width: 2.3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: block;
    position: absolute;
    left: 0;
    top: -.6rem;

    &::after {

      content: "";
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;

      position: absolute;  // why is this targetting its inmediate parent of absolute position
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0;
      transition: opacity .2s;
    }
  }

  // do select the radio button 'after' element (which is the child of radio-label)
  // when the radio input is checked
  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    opacity: 1;
  }
}
